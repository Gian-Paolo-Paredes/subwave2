<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_submarine</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initialize variables
//grav = .2;
hsp = 0;
vsp = 0;

divingspeed =2;
movespeed = 2;

accel = .5;
decel = 1;
hsp_max = 10;
vsp_max = 10;

hp_max =100;
hp = hp_max;

light_max = 100;
light_resource = light_max;
light_consume = 1;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Player's Input

key_right = keyboard_check(vk_right);
key_left = keyboard_check(vk_left);

key_up = keyboard_check(vk_up);
key_down = keyboard_check(vk_down);

if(hp &lt;= 0 ){
//game over
}
/*
if(){
    light_resource -= light_consume* delta_time;
}
*/

//reactions

Hmove = -key_left + key_right;
Vmove = -key_up + key_down;

hsp+= accel*(keyboard_check(vk_right) - keyboard_check(vk_left))
vsp+= accel*(keyboard_check(vk_down)- keyboard_check(vk_up))


//speed *= .5;

//hsp = Hmove * movespeed;

//vsp = Vmove * divingspeed;


     
  //  if(hsp&lt;5){
 //       hsp=+1;
  //      }
        
  //  if(vsp&lt;5){
  //      vsp=+1;
  //      }

    
//horizontal Collison
    if ( place_meeting (x+hsp,y,obj_wall)){
    
        while(!place_meeting(x+sign(hsp),y,obj_wall))
        {
           x += sign(hsp);   
        }   
        
        direction = -direction +180;
        hsp= hsp*-1 /3;
        hp -= obj_wall.damage;
    }
    x+= hsp;
        
        //verical Collison
    if ( place_meeting (x,y+vsp,obj_wall)){
        while( !place_meeting(x,y+sign(vsp),obj_wall)){
        
           y += sign(vsp);
        }
        direction = -direction +180;
        vsp= vsp*-1 /3;
        hp -= obj_wall.damage;
    }
    y+= vsp;
        

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="90">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.flashlight_toggle == true) {
    global.flashlight_toggle = false;
} else {
    global.flashlight_toggle = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
